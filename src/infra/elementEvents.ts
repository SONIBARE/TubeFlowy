export interface SlapstukEvents {
  abort: (e: UIEvent) => void;
  animationcancel: (e: AnimationEvent) => void;
  animationend: (e: AnimationEvent) => void;
  animationiteration: (e: AnimationEvent) => void;
  animationstart: (e: AnimationEvent) => void;
  auxclick: (e: MouseEvent) => void;
  beforeinput: (e: InputEvent) => void;
  blur: (e: FocusEvent) => void;
  cancel: (e: Event) => void;
  canplay: (e: Event) => void;
  canplaythrough: (e: Event) => void;
  change: (e: Event) => void;
  click: (e: MouseEvent) => void;
  close: (e: Event) => void;
  compositionend: (e: CompositionEvent) => void;
  compositionstart: (e: CompositionEvent) => void;
  compositionupdate: (e: CompositionEvent) => void;
  contextmenu: (e: MouseEvent) => void;
  cuechange: (e: Event) => void;
  dblclick: (e: MouseEvent) => void;
  drag: (e: DragEvent) => void;
  dragend: (e: DragEvent) => void;
  dragenter: (e: DragEvent) => void;
  dragexit: (e: Event) => void;
  dragleave: (e: DragEvent) => void;
  dragover: (e: DragEvent) => void;
  dragstart: (e: DragEvent) => void;
  drop: (e: DragEvent) => void;
  durationchange: (e: Event) => void;
  emptied: (e: Event) => void;
  ended: (e: Event) => void;
  error: (e: ErrorEvent) => void;
  focus: (e: FocusEvent) => void;
  focusin: (e: FocusEvent) => void;
  focusout: (e: FocusEvent) => void;
  gotpointercapture: (e: PointerEvent) => void;
  input: (e: Event) => void;
  invalid: (e: Event) => void;
  keydown: (e: KeyboardEvent) => void;
  keypress: (e: KeyboardEvent) => void;
  keyup: (e: KeyboardEvent) => void;
  load: (e: Event) => void;
  loadeddata: (e: Event) => void;
  loadedmetadata: (e: Event) => void;
  loadstart: (e: Event) => void;
  lostpointercapture: (e: PointerEvent) => void;
  mousedown: (e: MouseEvent) => void;
  mouseenter: (e: MouseEvent) => void;
  mouseleave: (e: MouseEvent) => void;
  mousemove: (e: MouseEvent) => void;
  mouseout: (e: MouseEvent) => void;
  mouseover: (e: MouseEvent) => void;
  mouseup: (e: MouseEvent) => void;
  pause: (e: Event) => void;
  play: (e: Event) => void;
  playing: (e: Event) => void;
  pointercancel: (e: PointerEvent) => void;
  pointerdown: (e: PointerEvent) => void;
  pointerenter: (e: PointerEvent) => void;
  pointerleave: (e: PointerEvent) => void;
  pointermove: (e: PointerEvent) => void;
  pointerout: (e: PointerEvent) => void;
  pointerover: (e: PointerEvent) => void;
  pointerup: (e: PointerEvent) => void;
  progress: (e: ProgressEvent) => void;
  ratechange: (e: Event) => void;
  reset: (e: Event) => void;
  resize: (e: UIEvent) => void;
  scroll: (e: Event) => void;
  securitypolicyviolation: (e: SecurityPolicyViolationEvent) => void;
  seeked: (e: Event) => void;
  seeking: (e: Event) => void;
  select: (e: Event) => void;
  selectionchange: (e: Event) => void;
  selectstart: (e: Event) => void;
  stalled: (e: Event) => void;
  submit: (e: Event) => void;
  suspend: (e: Event) => void;
  timeupdate: (e: Event) => void;
  toggle: (e: Event) => void;
  touchcancel: (e: TouchEvent) => void;
  touchend: (e: TouchEvent) => void;
  touchmove: (e: TouchEvent) => void;
  touchstart: (e: TouchEvent) => void;
  transitioncancel: (e: TransitionEvent) => void;
  transitionend: (e: TransitionEvent) => void;
  transitionrun: (e: TransitionEvent) => void;
  transitionstart: (e: TransitionEvent) => void;
  volumechange: (e: Event) => void;
  waiting: (e: Event) => void;
  wheel: (e: WheelEvent) => void;
}
